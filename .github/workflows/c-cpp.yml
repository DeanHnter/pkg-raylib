name: Build raylib

on: workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clone raylib
      run: git clone --recursive https://github.com/raysan5/raylib.git craylib
    
    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev libwayland-dev libxkbcommon-dev

    - name: Install Dependencies (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        brew update
        brew install cmake
        mkdir -p raylib/macos/aarch64
    
    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install make
        choco install cmake

    - name: Build raylib
      run: |
        mkdir artifacts
        cd craylib
        mkdir build && cd build
        cmake -DPLATFORM=Desktop ..
        cmake --build . --config Release

    - name: Move library (Nix)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        mv craylib/build/raylib/libraylib.a  artifacts/libraylib.a
    
    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mv craylib/build/raylib/Release/raylib.lib artifacts/raylib.lib
        
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: raylib-${{ matrix.os }}
        path: artifacts
